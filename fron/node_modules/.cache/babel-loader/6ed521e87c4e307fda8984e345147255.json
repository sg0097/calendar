{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\OneDrive\\\\Desktop\\\\calendar\\\\fron\\\\src\\\\components\\\\cal.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport DayCell from \"./daycell\";\nimport \"../styles/calendar.css\";\nconst Calendar = () => {\n  const [currentDate, setCurrentDate] = useState(new Date(2024, 0, 1));\n  const [holidays, setHolidays] = useState([]);\n  const [selectedYear, setSelectedYear] = useState(2024); // Dropdown for year selection\n\n  // Fetch holidays from the backend\n  const fetchHolidays = async () => {\n    const month = currentDate.getMonth() + 1;\n    console.log(`Fetching holidays for: Year=${selectedYear}, Month=${month}`); // ✅ Debug log\n\n    try {\n      const response = await fetch(`http://localhost:8089/api/holidays?year=${selectedYear}&month=${month}`);\n      if (!response.ok) {\n        console.error(\"Server error:\", response.status);\n        return;\n      }\n      const data = await response.json();\n      console.log(\"Fetched holidays:\", data); // ✅ Debug log\n      setHolidays(data); // ✅ Update state\n    } catch (error) {\n      console.error(\"Error fetching holidays:\", error);\n    }\n  };\n\n  // Auto-fetch on initial load & when year changes\n  useEffect(() => {\n    fetchHolidays();\n  }, [currentDate, selectedYear]);\n  const prevMonth = () => {\n    const prev = new Date(currentDate);\n    prev.setMonth(prev.getMonth() - 1);\n    if (prev.getFullYear() < 2024) return;\n    setCurrentDate(prev);\n  };\n  const nextMonth = () => {\n    const next = new Date(currentDate);\n    next.setMonth(next.getMonth() + 1);\n    if (next.getFullYear() > 2029) return;\n    setCurrentDate(next);\n  };\n  const handleYearChange = event => {\n    setSelectedYear(Number(event.target.value));\n  };\n  const daysInMonth = new Date(selectedYear, currentDate.getMonth() + 1, 0).getDate();\n  const dayCells = [];\n  for (let day = 1; day <= daysInMonth; day++) {\n    const dateStr = `${selectedYear}-${currentDate.getMonth() + 1}-${day}`;\n    const holidaysForDay = holidays.filter(h => h.date === dateStr);\n    dayCells.push(/*#__PURE__*/React.createElement(DayCell, {\n      key: dateStr,\n      date: dateStr,\n      holidays: holidaysForDay,\n      refreshHolidays: fetchHolidays,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }));\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: prevMonth,\n    className: \"nav-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"Prev\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, currentDate.toLocaleString(\"default\", {\n    month: \"long\"\n  })), /*#__PURE__*/React.createElement(\"select\", {\n    value: selectedYear,\n    onChange: handleYearChange,\n    className: \"year-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, Array.from({\n    length: 6\n  }, (_, i) => 2024 + i).map(year => /*#__PURE__*/React.createElement(\"option\", {\n    key: year,\n    value: year,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, year))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: nextMonth,\n    className: \"nav-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"Next\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fetch-holidays-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchHolidays,\n    className: \"fetch-holidays-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"Fetch Holidays\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, dayCells));\n};\nexport default Calendar;","map":{"version":3,"names":["React","useState","useEffect","DayCell","Calendar","currentDate","setCurrentDate","Date","holidays","setHolidays","selectedYear","setSelectedYear","fetchHolidays","month","getMonth","console","log","response","fetch","ok","error","status","data","json","prevMonth","prev","setMonth","getFullYear","nextMonth","next","handleYearChange","event","Number","target","value","daysInMonth","getDate","dayCells","day","dateStr","holidaysForDay","filter","h","date","push","createElement","key","refreshHolidays","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","toLocaleString","onChange","Array","from","length","_","i","map","year"],"sources":["C:/Users/shiva/OneDrive/Desktop/calendar/fron/src/components/cal.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport DayCell from \"./daycell\";\r\nimport \"../styles/calendar.css\";\r\n\r\nconst Calendar = () => {\r\n  const [currentDate, setCurrentDate] = useState(new Date(2024, 0, 1));\r\n  const [holidays, setHolidays] = useState([]);\r\n  const [selectedYear, setSelectedYear] = useState(2024); // Dropdown for year selection\r\n\r\n  // Fetch holidays from the backend\r\n  const fetchHolidays = async () => {\r\n    const month = currentDate.getMonth() + 1;\r\n    console.log(`Fetching holidays for: Year=${selectedYear}, Month=${month}`); // ✅ Debug log\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:8089/api/holidays?year=${selectedYear}&month=${month}`);\r\n      \r\n      if (!response.ok) {\r\n        console.error(\"Server error:\", response.status);\r\n        return;\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(\"Fetched holidays:\", data); // ✅ Debug log\r\n      setHolidays(data); // ✅ Update state\r\n    } catch (error) {\r\n      console.error(\"Error fetching holidays:\", error);\r\n    }\r\n  };\r\n\r\n  // Auto-fetch on initial load & when year changes\r\n  useEffect(() => {\r\n    fetchHolidays();\r\n  }, [currentDate, selectedYear]);\r\n\r\n  const prevMonth = () => {\r\n    const prev = new Date(currentDate);\r\n    prev.setMonth(prev.getMonth() - 1);\r\n    if (prev.getFullYear() < 2024) return;\r\n    setCurrentDate(prev);\r\n  };\r\n\r\n  const nextMonth = () => {\r\n    const next = new Date(currentDate);\r\n    next.setMonth(next.getMonth() + 1);\r\n    if (next.getFullYear() > 2029) return;\r\n    setCurrentDate(next);\r\n  };\r\n\r\n  const handleYearChange = (event) => {\r\n    setSelectedYear(Number(event.target.value));\r\n  };\r\n\r\n  const daysInMonth = new Date(selectedYear, currentDate.getMonth() + 1, 0).getDate();\r\n  const dayCells = [];\r\n\r\n  for (let day = 1; day <= daysInMonth; day++) {\r\n    const dateStr = `${selectedYear}-${currentDate.getMonth() + 1}-${day}`;\r\n    const holidaysForDay = holidays.filter((h) => h.date === dateStr);\r\n    dayCells.push(\r\n      <DayCell key={dateStr} date={dateStr} holidays={holidaysForDay} refreshHolidays={fetchHolidays} />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"calendar-container\">\r\n      <div className=\"calendar-header\">\r\n        <button onClick={prevMonth} className=\"nav-button\">Prev</button>\r\n        \r\n        <h2>{currentDate.toLocaleString(\"default\", { month: \"long\" })}</h2>\r\n\r\n        {/* Year dropdown */}\r\n        <select value={selectedYear} onChange={handleYearChange} className=\"year-dropdown\">\r\n          {Array.from({ length: 6 }, (_, i) => 2024 + i).map((year) => (\r\n            <option key={year} value={year}>{year}</option>\r\n          ))}\r\n        </select>\r\n\r\n        <button onClick={nextMonth} className=\"nav-button\">Next</button>\r\n      </div>\r\n\r\n      {/* ✅ Fetch Holidays Button */}\r\n      <div className=\"fetch-holidays-container\">\r\n        <button onClick={fetchHolidays} className=\"fetch-holidays-button\">\r\n          Fetch Holidays\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"calendar-grid\">{dayCells}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAO,wBAAwB;AAE/B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGL,QAAQ,CAAC,IAAIM,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EACpE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAExD;EACA,MAAMW,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,KAAK,GAAGR,WAAW,CAACS,QAAQ,CAAC,CAAC,GAAG,CAAC;IACxCC,OAAO,CAACC,GAAG,CAAC,+BAA+BN,YAAY,WAAWG,KAAK,EAAE,CAAC,CAAC,CAAC;;IAE5E,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2CR,YAAY,UAAUG,KAAK,EAAE,CAAC;MAEtG,IAAI,CAACI,QAAQ,CAACE,EAAE,EAAE;QAChBJ,OAAO,CAACK,KAAK,CAAC,eAAe,EAAEH,QAAQ,CAACI,MAAM,CAAC;QAC/C;MACF;MAEA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClCR,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEM,IAAI,CAAC,CAAC,CAAC;MACxCb,WAAW,CAACa,IAAI,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdL,OAAO,CAACK,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;;EAED;EACAlB,SAAS,CAAC,MAAM;IACdU,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACP,WAAW,EAAEK,YAAY,CAAC,CAAC;EAE/B,MAAMc,SAAS,GAAGA,CAAA,KAAM;IACtB,MAAMC,IAAI,GAAG,IAAIlB,IAAI,CAACF,WAAW,CAAC;IAClCoB,IAAI,CAACC,QAAQ,CAACD,IAAI,CAACX,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IAClC,IAAIW,IAAI,CAACE,WAAW,CAAC,CAAC,GAAG,IAAI,EAAE;IAC/BrB,cAAc,CAACmB,IAAI,CAAC;EACtB,CAAC;EAED,MAAMG,SAAS,GAAGA,CAAA,KAAM;IACtB,MAAMC,IAAI,GAAG,IAAItB,IAAI,CAACF,WAAW,CAAC;IAClCwB,IAAI,CAACH,QAAQ,CAACG,IAAI,CAACf,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IAClC,IAAIe,IAAI,CAACF,WAAW,CAAC,CAAC,GAAG,IAAI,EAAE;IAC/BrB,cAAc,CAACuB,IAAI,CAAC;EACtB,CAAC;EAED,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;IAClCpB,eAAe,CAACqB,MAAM,CAACD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC;EAC7C,CAAC;EAED,MAAMC,WAAW,GAAG,IAAI5B,IAAI,CAACG,YAAY,EAAEL,WAAW,CAACS,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAACsB,OAAO,CAAC,CAAC;EACnF,MAAMC,QAAQ,GAAG,EAAE;EAEnB,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,IAAIH,WAAW,EAAEG,GAAG,EAAE,EAAE;IAC3C,MAAMC,OAAO,GAAG,GAAG7B,YAAY,IAAIL,WAAW,CAACS,QAAQ,CAAC,CAAC,GAAG,CAAC,IAAIwB,GAAG,EAAE;IACtE,MAAME,cAAc,GAAGhC,QAAQ,CAACiC,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACC,IAAI,KAAKJ,OAAO,CAAC;IACjEF,QAAQ,CAACO,IAAI,cACX5C,KAAA,CAAA6C,aAAA,CAAC1C,OAAO;MAAC2C,GAAG,EAAEP,OAAQ;MAACI,IAAI,EAAEJ,OAAQ;MAAC/B,QAAQ,EAAEgC,cAAe;MAACO,eAAe,EAAEnC,aAAc;MAAAoC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAE,CACnG,CAAC;EACH;EAEA,oBACErD,KAAA,CAAA6C,aAAA;IAAKS,SAAS,EAAC,oBAAoB;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACjCrD,KAAA,CAAA6C,aAAA;IAAKS,SAAS,EAAC,iBAAiB;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9BrD,KAAA,CAAA6C,aAAA;IAAQU,OAAO,EAAE/B,SAAU;IAAC8B,SAAS,EAAC,YAAY;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,MAAY,CAAC,eAEhErD,KAAA,CAAA6C,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKhD,WAAW,CAACmD,cAAc,CAAC,SAAS,EAAE;IAAE3C,KAAK,EAAE;EAAO,CAAC,CAAM,CAAC,eAGnEb,KAAA,CAAA6C,aAAA;IAAQX,KAAK,EAAExB,YAAa;IAAC+C,QAAQ,EAAE3B,gBAAiB;IAACwB,SAAS,EAAC,eAAe;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC/EK,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAE,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAI,GAAGA,CAAC,CAAC,CAACC,GAAG,CAAEC,IAAI,iBACtDhE,KAAA,CAAA6C,aAAA;IAAQC,GAAG,EAAEkB,IAAK;IAAC9B,KAAK,EAAE8B,IAAK;IAAAhB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEW,IAAa,CAC/C,CACK,CAAC,eAEThE,KAAA,CAAA6C,aAAA;IAAQU,OAAO,EAAE3B,SAAU;IAAC0B,SAAS,EAAC,YAAY;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,MAAY,CAC5D,CAAC,eAGNrD,KAAA,CAAA6C,aAAA;IAAKS,SAAS,EAAC,0BAA0B;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACvCrD,KAAA,CAAA6C,aAAA;IAAQU,OAAO,EAAE3C,aAAc;IAAC0C,SAAS,EAAC,uBAAuB;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,gBAE1D,CACL,CAAC,eAENrD,KAAA,CAAA6C,aAAA;IAAKS,SAAS,EAAC,eAAe;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEhB,QAAc,CAC3C,CAAC;AAEV,CAAC;AAED,eAAejC,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module"}