{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\OneDrive\\\\Desktop\\\\calendar\\\\fron\\\\src\\\\components\\\\cal.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport DayCell from \"./daycell\";\nimport \"../styles/calendar.css\";\nconst Calendar = () => {\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\n  const [currentMonth, setCurrentMonth] = useState(new Date().getMonth());\n  const [holidays, setHolidays] = useState([]);\n\n  // Fetch holidays when the button is clicked\n  const fetchHolidays = async () => {\n    try {\n      const response = await fetch(`http://localhost:8089/api/holidays?year=${selectedYear}&month=${currentMonth + 1}`);\n      if (!response.ok) {\n        throw new Error(`Error: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log(\"Fetched holidays:\", data); // ✅ Debugging log\n\n      setHolidays([...data]); // ✅ Ensure UI updates\n    } catch (error) {\n      console.error(\"Error fetching holidays:\", error);\n    }\n  };\n  const prevMonth = () => {\n    setCurrentMonth(prev => prev === 0 ? 11 : prev - 1);\n  };\n  const nextMonth = () => {\n    setCurrentMonth(prev => prev === 11 ? 0 : prev + 1);\n  };\n\n  // Generate calendar grid\n  const daysInMonth = new Date(selectedYear, currentMonth + 1, 0).getDate();\n  const dayCells = [];\n  for (let day = 1; day <= daysInMonth; day++) {\n    const dateStr = `${selectedYear}-${(currentMonth + 1).toString().padStart(2, \"0\")}-${day.toString().padStart(2, \"0\")}`;\n    const holidaysForDay = holidays.filter(h => h.date === dateStr);\n    dayCells.push(/*#__PURE__*/React.createElement(DayCell, {\n      key: dateStr,\n      date: dateStr,\n      holidays: holidaysForDay,\n      refreshHolidays: fetchHolidays,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }));\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: prevMonth,\n    className: \"nav-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Prev\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, new Date(selectedYear, currentMonth).toLocaleString(\"default\", {\n    month: \"long\"\n  }), \" \", selectedYear), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: nextMonth,\n    className: \"nav-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Next\"), /*#__PURE__*/React.createElement(\"select\", {\n    value: selectedYear,\n    onChange: e => setSelectedYear(Number(e.target.value)),\n    className: \"year-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, Array.from({\n    length: 6\n  }, (_, i) => 2024 + i).map(year => /*#__PURE__*/React.createElement(\"option\", {\n    key: year,\n    value: year,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, year))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchHolidays,\n    className: \"fetch-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"Fetch Holidays\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"calendar-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, dayCells));\n};\nexport default Calendar;","map":{"version":3,"names":["React","useState","useEffect","DayCell","Calendar","selectedYear","setSelectedYear","Date","getFullYear","currentMonth","setCurrentMonth","getMonth","holidays","setHolidays","fetchHolidays","response","fetch","ok","Error","status","data","json","console","log","error","prevMonth","prev","nextMonth","daysInMonth","getDate","dayCells","day","dateStr","toString","padStart","holidaysForDay","filter","h","date","push","createElement","key","refreshHolidays","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","toLocaleString","month","value","onChange","e","Number","target","Array","from","length","_","i","map","year"],"sources":["C:/Users/shiva/OneDrive/Desktop/calendar/fron/src/components/cal.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport DayCell from \"./daycell\";\r\nimport \"../styles/calendar.css\";\r\n\r\nconst Calendar = () => {\r\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\r\n  const [currentMonth, setCurrentMonth] = useState(new Date().getMonth());\r\n  const [holidays, setHolidays] = useState([]);\r\n\r\n  // Fetch holidays when the button is clicked\r\n  const fetchHolidays = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8089/api/holidays?year=${selectedYear}&month=${currentMonth + 1}`);\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Error: ${response.status}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log(\"Fetched holidays:\", data); // ✅ Debugging log\r\n      \r\n      setHolidays([...data]); // ✅ Ensure UI updates\r\n    } catch (error) {\r\n      console.error(\"Error fetching holidays:\", error);\r\n    }\r\n  };\r\n\r\n  const prevMonth = () => {\r\n    setCurrentMonth((prev) => (prev === 0 ? 11 : prev - 1));\r\n  };\r\n\r\n  const nextMonth = () => {\r\n    setCurrentMonth((prev) => (prev === 11 ? 0 : prev + 1));\r\n  };\r\n\r\n  // Generate calendar grid\r\n  const daysInMonth = new Date(selectedYear, currentMonth + 1, 0).getDate();\r\n  const dayCells = [];\r\n\r\n  for (let day = 1; day <= daysInMonth; day++) {\r\n    const dateStr = `${selectedYear}-${(currentMonth + 1).toString().padStart(2, \"0\")}-${day.toString().padStart(2, \"0\")}`;\r\n    const holidaysForDay = holidays.filter((h) => h.date === dateStr);\r\n\r\n    dayCells.push(\r\n      <DayCell key={dateStr} date={dateStr} holidays={holidaysForDay} refreshHolidays={fetchHolidays} />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"calendar-container\">\r\n      <div className=\"calendar-header\">\r\n        <button onClick={prevMonth} className=\"nav-button\">Prev</button>\r\n        <h2>\r\n          {new Date(selectedYear, currentMonth).toLocaleString(\"default\", { month: \"long\" })} {selectedYear}\r\n        </h2>\r\n        <button onClick={nextMonth} className=\"nav-button\">Next</button>\r\n\r\n        {/* Year Dropdown */}\r\n        <select value={selectedYear} onChange={(e) => setSelectedYear(Number(e.target.value))} className=\"year-dropdown\">\r\n          {Array.from({ length: 6 }, (_, i) => 2024 + i).map((year) => (\r\n            <option key={year} value={year}>{year}</option>\r\n          ))}\r\n        </select>\r\n\r\n        {/* Fetch Button */}\r\n        <button onClick={fetchHolidays} className=\"fetch-button\">Fetch Holidays</button>\r\n      </div>\r\n\r\n      <div className=\"calendar-grid\">{dayCells}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}