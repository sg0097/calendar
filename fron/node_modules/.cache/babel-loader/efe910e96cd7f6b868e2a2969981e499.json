{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shiva\\\\OneDrive\\\\Desktop\\\\calendar\\\\fron\\\\src\\\\components\\\\cal.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport DayCell from \"./daycell\";\nimport \"../styles.css/\"; // Import the new CSS file\n\nconst Calendar = () => {\n  const [currentDate, setCurrentDate] = useState(new Date(2024, 0, 1));\n  const [holidays, setHolidays] = useState([]);\n  const [selectedYear, setSelectedYear] = useState(2024); // Year dropdown\n\n  useEffect(() => {\n    const fetchHolidays = async () => {\n      const month = currentDate.getMonth() + 1;\n      try {\n        const response = await fetch(`http://localhost:8089/api/holidays?year=${selectedYear}&month=${month}`);\n        const data = await response.json();\n        setHolidays(data);\n      } catch (error) {\n        console.error(\"Error fetching holidays:\", error);\n      }\n    };\n    fetchHolidays();\n  }, [currentDate, selectedYear]);\n  const prevMonth = () => {\n    const prev = new Date(currentDate);\n    prev.setMonth(prev.getMonth() - 1);\n    setCurrentDate(new Date(prev));\n  };\n  const nextMonth = () => {\n    const next = new Date(currentDate);\n    next.setMonth(next.getMonth() + 1);\n    setCurrentDate(new Date(next));\n  };\n  const handleYearChange = event => {\n    setSelectedYear(Number(event.target.value));\n  };\n  const daysInMonth = new Date(selectedYear, currentDate.getMonth() + 1, 0).getDate();\n  const firstDay = new Date(selectedYear, currentDate.getMonth(), 1).getDay();\n  let dayCells = [];\n\n  // ðŸ”¹ Add empty placeholders before the first day of the month\n  for (let i = 0; i < firstDay; i++) {\n    dayCells.push(/*#__PURE__*/React.createElement(\"div\", {\n      key: `empty-${i}`,\n      className: \"p-4 bg-gray-100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }\n    }));\n  }\n\n  // ðŸ”¹ Add actual days of the month\n  for (let day = 1; day <= daysInMonth; day++) {\n    const dateStr = `${selectedYear}-${currentDate.getMonth() + 1}-${day}`;\n    const holidaysForDay = holidays.filter(h => h.date === dateStr);\n    dayCells.push(/*#__PURE__*/React.createElement(\"div\", {\n      key: dateStr,\n      className: \"p-2 border rounded-lg bg-white flex items-center justify-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DayCell, {\n      date: dateStr,\n      holidays: holidaysForDay,\n      refreshHolidays: () => setCurrentDate(new Date(currentDate)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    })));\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-4 max-w-2xl mx-auto bg-gray-50 shadow-lg rounded-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex justify-between items-center mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: prevMonth,\n    className: \"bg-blue-500 text-white px-3 py-1 rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Prev\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex items-center space-x-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-xl font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, currentDate.toLocaleString(\"default\", {\n    month: \"long\"\n  })), /*#__PURE__*/React.createElement(\"select\", {\n    value: selectedYear,\n    onChange: handleYearChange,\n    className: \"border rounded-md p-1 text-gray-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, Array.from({\n    length: 10\n  }, (_, i) => 2020 + i).map(year => /*#__PURE__*/React.createElement(\"option\", {\n    key: year,\n    value: year,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, year)))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: nextMonth,\n    className: \"bg-blue-500 text-white px-3 py-1 rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Next\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid grid-cols-7 gap-2 text-center font-bold text-gray-700 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"Sun\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"Mon\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"Tue\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, \"Wed\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"Thu\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"Fri\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"Sat\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid grid-cols-7 gap-2 bg-white p-4 shadow-md rounded-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, dayCells));\n};\nexport default Calendar;","map":{"version":3,"names":["React","useState","useEffect","DayCell","Calendar","currentDate","setCurrentDate","Date","holidays","setHolidays","selectedYear","setSelectedYear","fetchHolidays","month","getMonth","response","fetch","data","json","error","console","prevMonth","prev","setMonth","nextMonth","next","handleYearChange","event","Number","target","value","daysInMonth","getDate","firstDay","getDay","dayCells","i","push","createElement","key","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","day","dateStr","holidaysForDay","filter","h","date","refreshHolidays","onClick","toLocaleString","onChange","Array","from","length","_","map","year"],"sources":["C:/Users/shiva/OneDrive/Desktop/calendar/fron/src/components/cal.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport DayCell from \"./daycell\";\r\nimport \"../styles.css/\"; // Import the new CSS file\r\n\r\nconst Calendar = () => {\r\n  const [currentDate, setCurrentDate] = useState(new Date(2024, 0, 1));\r\n  const [holidays, setHolidays] = useState([]);\r\n  const [selectedYear, setSelectedYear] = useState(2024); // Year dropdown\r\n\r\n  useEffect(() => {\r\n    const fetchHolidays = async () => {\r\n      const month = currentDate.getMonth() + 1;\r\n      try {\r\n        const response = await fetch(`http://localhost:8089/api/holidays?year=${selectedYear}&month=${month}`);\r\n        const data = await response.json();\r\n        setHolidays(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching holidays:\", error);\r\n      }\r\n    };\r\n    fetchHolidays();\r\n  }, [currentDate, selectedYear]);\r\n\r\n  const prevMonth = () => {\r\n    const prev = new Date(currentDate);\r\n    prev.setMonth(prev.getMonth() - 1);\r\n    setCurrentDate(new Date(prev));\r\n  };\r\n\r\n  const nextMonth = () => {\r\n    const next = new Date(currentDate);\r\n    next.setMonth(next.getMonth() + 1);\r\n    setCurrentDate(new Date(next));\r\n  };\r\n\r\n  const handleYearChange = (event) => {\r\n    setSelectedYear(Number(event.target.value));\r\n  };\r\n\r\n  const daysInMonth = new Date(selectedYear, currentDate.getMonth() + 1, 0).getDate();\r\n  const firstDay = new Date(selectedYear, currentDate.getMonth(), 1).getDay();\r\n\r\n  let dayCells = [];\r\n\r\n  // ðŸ”¹ Add empty placeholders before the first day of the month\r\n  for (let i = 0; i < firstDay; i++) {\r\n    dayCells.push(<div key={`empty-${i}`} className=\"p-4 bg-gray-100\"></div>);\r\n  }\r\n\r\n  // ðŸ”¹ Add actual days of the month\r\n  for (let day = 1; day <= daysInMonth; day++) {\r\n    const dateStr = `${selectedYear}-${currentDate.getMonth() + 1}-${day}`;\r\n    const holidaysForDay = holidays.filter((h) => h.date === dateStr);\r\n\r\n    dayCells.push(\r\n      <div key={dateStr} className=\"p-2 border rounded-lg bg-white flex items-center justify-center\">\r\n        <DayCell date={dateStr} holidays={holidaysForDay} refreshHolidays={() => setCurrentDate(new Date(currentDate))} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-4 max-w-2xl mx-auto bg-gray-50 shadow-lg rounded-lg\">\r\n      <div className=\"flex justify-between items-center mb-4\">\r\n        <button onClick={prevMonth} className=\"bg-blue-500 text-white px-3 py-1 rounded\">Prev</button>\r\n        \r\n        <div className=\"flex items-center space-x-2\">\r\n          <h2 className=\"text-xl font-bold\">{currentDate.toLocaleString(\"default\", { month: \"long\" })}</h2>\r\n          <select\r\n            value={selectedYear}\r\n            onChange={handleYearChange}\r\n            className=\"border rounded-md p-1 text-gray-700\"\r\n          >\r\n            {Array.from({ length: 10 }, (_, i) => 2020 + i).map((year) => (\r\n              <option key={year} value={year}>{year}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <button onClick={nextMonth} className=\"bg-blue-500 text-white px-3 py-1 rounded\">Next</button>\r\n      </div>\r\n\r\n      {/* Weekday Labels */}\r\n      <div className=\"grid grid-cols-7 gap-2 text-center font-bold text-gray-700 mb-2\">\r\n        <div>Sun</div>\r\n        <div>Mon</div>\r\n        <div>Tue</div>\r\n        <div>Wed</div>\r\n        <div>Thu</div>\r\n        <div>Fri</div>\r\n        <div>Sat</div>\r\n      </div>\r\n\r\n      {/* Calendar Grid */}\r\n      <div className=\"grid grid-cols-7 gap-2 bg-white p-4 shadow-md rounded-lg\">\r\n        {dayCells}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}